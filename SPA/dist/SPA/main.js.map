{"version":3,"sources":["./src/environments/environment.ts","./src/app/shared/profile.service.ts","./src/app/shared/auth.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAO,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,UAAU,EAAE,yBAAyB;IAErC,SAAS,EAAC;QACR,QAAQ,EAAE,sCAAsC;QAChD,WAAW,EAAE,uBAAuB;QACpC,qBAAqB,EAAE,uBAAuB;QAC9C,KAAK,EAAE;YACH,YAAY,EAAE,4BAA4B;YAC1C,cAAc,EAAE,6BAA6B;YAC7C,WAAW,EAAE,8BAA8B;SAC9C;QACD,WAAW,EAAE;YACT,YAAY,EAAE;gBACV,SAAS,EAAE,+EAA+E;aAC7F;YACD,cAAc,EAAE;gBACZ,SAAS,EAAE,gFAAgF;aAC9F;YACD,WAAW,EAAE;gBACT,SAAS,EAAE,iFAAiF;aAC/F;SACJ;QACD,eAAe,EAAE,qBAAqB;QACtC,SAAS,EAAE;YACX,MAAM,EAAE,CAAC,oDAAoD,EAAE,QAAQ,EAAE,SAAS,CAAC;YACnF,GAAG,EAAE,wBAAwB;SAC5B;KACF;CACF;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAAyD;;;AAMlD,MAAM,cAAc;IAIzB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAExB,IAAI,CAAC,UAAU,GAAG,wEAAW,CAAC,UAAU,GAAG,eAAe,CAAC;IAC7D,CAAC;IAED,kBAAkB;QAEhB,2CAA2C;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IACpD,CAAC;;4EAdU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AAC5C;AACS;;;;;AAQrD,MAAM,WAAW;IAoBtB,YACU,YAAyB,EACzB,qBAA2C,EAC3C,eAA+B,EAC/B,OAAgB;QAHhB,iBAAY,GAAZ,YAAY,CAAa;QACzB,0BAAqB,GAArB,qBAAqB,CAAsB;QAC3C,oBAAe,GAAf,eAAe,CAAgB;QAC/B,YAAO,GAAP,OAAO,CAAS;QAtB1B,qCAAqC;QAC7B,qBAAgB,GAA4B,IAAI,oDAAe,CAAC,KAAK,CAAC,CAAC;QACxE,cAAS,GAAwB,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QAE7E,qBAAqB;QACb,oBAAe,GAA0B,IAAI,oDAAe,CAAC,SAAS,CAAC,CAAC;QACxE,aAAQ,GAAsB,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QAE1E,wCAAwC;QAChC,qBAAgB,GAA4B,IAAI,oDAAe,CAAC,KAAK,CAAC,CAAC;QACxE,cAAS,GAAwB,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QAI7E,qEAAqE;QACrE,4CAA4C;QACpC,aAAQ,GAAY,KAAK,CAAC;QAUhC,gCAAgC;QAChC,IAAI,CAAC,qBAAqB,CAAC,WAAW;aACrC,IAAI,CACH,6DAAM,CAAC,CAAC,MAAyB,EAAE,EAAE,CAAC,MAAM,KAAK,qEAAiB,CAAC,IAAI,CAAC,CACzE;aACA,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;YAEf,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAEhC,IAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EACvC;gBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;QAEH,4BAA4B;QAC5B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAE;YAE5B,IAAG,MAAM,EACT;gBACG,IAAG,IAAI,CAAC,OAAO,EACf;oBACI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAE3C;qBAAM;oBAEP,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,OAAO,GAAE;wBACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;wBAEvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAEvC,CAAC,CAAC,CAAC;iBACL;aACD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,gCAAgC;IACxB,wBAAwB;QAE9B,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAElE,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YAE5E,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,gBAAgB,CACrC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CACjD,CAAC;YAEJ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;QAED,OAAO,aAAa,CAAC;IACvB,CAAC;IAED,eAAe;QAEX,OAAO,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAC3C,CAAC;IAED,iCAAiC;IACjC,gDAAgD;IACxC,UAAU;QAEd,OAAO,IAAI,CAAC,wBAAwB,EAAE,KAAK,IAAI,CAAC;IACpD,CAAC;IAED,KAAK;QAEH,IAAG,IAAI,CAAC,QAAQ,EAChB;YACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;SACnC;IACH,CAAC;IAED,MAAM;QAEJ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;;sEA7GU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ICCd,wEAAiD;IAC/C,wEAAuC;IAAnB,uSAAiB;IAAE,gEAAK;IAAA,4DAAI;IAClD,4DAAK;;;;IAKL,wEAAiD;IAC/C,wEAAwC;IAApB,wSAAkB;IAAE,iEAAM;IAAA,4DAAI;IACpD,4DAAK;;;IAOT,2EAAiD;;AChB5C,MAAM,YAAY;IAMvB,YACc,YAAyB,EACzB,YAAyB;QADzB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAa;QANvC,aAAQ,GAAG,KAAK,CAAC;QAET,kBAAa,GAAmB,EAAE,CAAC;IAKvC,CAAC;IAGL,QAAQ;QAEN,IAAI,CAAC,QAAQ,GAAG,MAAM,KAAK,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAE3D,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC;QAElD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,CAAC,GAAE;YACzD,IAAG,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,OAAO,KAAK,IAAI,EACnC;gBACI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aAC1D;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,GAAG;YACtC,GAAG,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,MAAM;QACF,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IAED,UAAU;QAER,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAE;YAEnC,OAAO,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;;wEA/CU,YAAY;4FAAZ,YAAY;QDZzB,yEAA2D;QACzD,yEAAuB;QACvB,uEAAiC;QAAA,wEAAa;QAAA,4DAAI;QAClD,4EAAsM;QACpM,qEAAyC;QAC3C,4DAAS;QAET,yEAAkE;QAChE,wEAA+B;QAC7B,wEAA4B;QAC1B,uEAAmC;QAAA,gEAAI;QAAA,4DAAI;QAC7C,4DAAK;QACL,wGAEK;QAEL,yEAA4B;QAC1B,yEAAyC;QAAA,mEAAO;QAAA,4DAAI;QACtD,4DAAK;QACL,wGAEK;QACP,4DAAK;QACP,4DAAM;QACN,4DAAM;QACR,4DAAM;QAEN,0EAAuB;QACrB,+HAAiD;QACnD,4DAAM;;QAjB6B,2DAAkB;QAAlB,kFAAkB;QAOlB,0DAAkB;QAAlB,kFAAkB;QASnC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;AEpB1B,MAAM,gBAAgB;IAI3B,YACU,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAC5B,CAAC;IAER,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAE;YACtC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAEnB,CAAC,CAAC,CAAC;IAEL,CAAC;;gFAdU,gBAAgB;gGAAhB,gBAAgB;QCT7B,sEAAK;QACD,uDACJ;QAAA,4DAAM;;QADF,0DACJ;QADI,iGACJ;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AAE0B;AACjB;AACiF;AACsB;;AAE/J,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AAE9G,SAAS,cAAc,CAAC,QAAkB,EAAE,OAAe;IAClE,yBAAyB;AACzB,CAAC;AAEM,SAAS,mBAAmB;IACjC,OAAO,IAAI,2EAAuB,CAAC;QACjC,IAAI,EAAE;YACJ,QAAQ,EAAE,qEAAW,CAAC,SAAS,CAAC,QAAQ;YACxC,SAAS,EAAE,qEAAW,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS;YACnE,WAAW,EAAE,qEAAW,CAAC,SAAS,CAAC,WAAW;YAC9C,qBAAqB,EAAE,GAAG;YAC1B,gBAAgB,EAAE,CAAC,qEAAW,CAAC,SAAS,CAAC,eAAe,CAAC;SAC1D;QACD,KAAK,EAAE;YACL,aAAa,EAAE,wEAAoB,CAAC,YAAY;YAChD,sBAAsB,EAAE,IAAI;SAC7B;QACD,MAAM,EAAE;YACN,aAAa,EAAE;gBACb,cAAc;gBACd,QAAQ,EAAE,4DAAQ,CAAC,IAAI;gBACvB,iBAAiB,EAAE,KAAK;aACzB;SACF;KACF,CAAC,CAAC;AACL,CAAC;AAEM,SAAS,4BAA4B;IAC1C,MAAM,oBAAoB,GAAG,IAAI,GAAG,EAAyB,CAAC;IAC9D,oBAAoB,CAAC,GAAG,CAAC,qEAAW,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,qEAAW,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAEtG,OAAO;QACL,eAAe,EAAE,mEAAe,CAAC,QAAQ;QACzC,oBAAoB;KACrB,CAAC;AACJ,CAAC;AA6BM,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FAfb;QACT;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,mEAAe;YACzB,KAAK,EAAE,IAAI;SACZ,EAAC;YACA,OAAO,EAAE,iEAAa;YACtB,UAAU,EAAE,mBAAmB;SAChC,EAAC;YACA,OAAO,EAAE,2EAAuB;YAChC,UAAU,EAAE,4BAA4B;SACzC;QACD,+DAAW;QACX,wEAAoB;KACrB,YAnBQ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;SACjB;mIAkBU,SAAS,mBAxBlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;;;;;;;;;;;;;ACzDpB;AAAA;AAAA;AAAA;AAAA;AAAuD;AACQ;;;AAE/D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;CAEjD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACXuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["export const environment = {\n  production: false,\n  urlAddress: 'https://localhost:44303',\n\n  b2cConfig:{\n    clientId: \"5586f96b-48e5-4966-8d44-bbc8737157c7\",\n    redirectUrl: \"http://localhost:4200\",\n    postLogoutRedirectUri: \"http://localhost:4200\",\n    names: {\n        signUpSignIn: \"B2C_1_WCGPMS_SignUp_SignIn\",\n        forgotPassword: \"B2C_1_WCGPMS_Password_Reset\",\n        editProfile: \"B2C_1_WCGPMS_Profile_Editing\"\n    },\n    authorities: {\n        signUpSignIn: {\n            authority: \"https://wcgb2c.b2clogin.com/wcgb2c.onmicrosoft.com/B2C_1_WCGPMS_SignUp_SignIn\",\n        },\n        forgotPassword: {\n            authority: \"https://wcgb2c.b2clogin.com/wcgb2c.onmicrosoft.com/B2C_1_WCGPMS_Password_Reset\",\n        },\n        editProfile: {\n            authority: \"https://wcgb2c.b2clogin.com/wcgb2c.onmicrosoft.com/B2C_1_WCGPMS_Profile_Editing\"\n        }\n    },\n    authorityDomain: \"wcgb2c.b2clogin.com\",\n    resources: {\n    scopes: ['https://wcgb2c.onmicrosoft.com/wcgpms-api/crud.all', 'openid', 'profile'],\n    uri: 'http://localhost:61250'\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport {environment} from 'src/environments/environment';\nimport { IUser } from './model-contracts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  private profileUrl: string;\n\n  constructor(\n    private http: HttpClient\n    ) {\n    this.profileUrl = environment.urlAddress + '/api/profiles';\n  }\n\n  getLoggedInProfile() : Observable<IUser>\n  {\n    //todo: need to change the profile service \n    return this.http.get<IUser>(`${this.profileUrl}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { MsalBroadcastService, MsalService } from '@azure/msal-angular';\nimport { AccountInfo, InteractionStatus, IPublicClientApplication } from '@azure/msal-browser';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { IUser } from './model-contracts';\nimport { ProfileService } from './profile.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  //get notified when login is complete\n  private loggedInSubject$:BehaviorSubject<boolean> = new BehaviorSubject(false);\n  public loggedIn$: Observable<boolean> = this.loggedInSubject$.asObservable();\n\n  //get project details\n  private profileSubject$:BehaviorSubject<IUser> = new BehaviorSubject(undefined);\n  public  profile$: Observable<IUser> = this.profileSubject$.asObservable();\n\n  //mainly used when wanting to auto login\n  private canLogInSubject$:BehaviorSubject<boolean> = new BehaviorSubject(false);\n  public canLogIn$: Observable<boolean> = this.canLogInSubject$.asObservable();\n\n  private profile: IUser;\n\n  // purpose of flag is to prevent attempts to login more than once or,\n  // when another login attempt is in progress\n  private canLogin: boolean = false; \n\n  constructor(\n    private _msalService: MsalService,\n    private _msalBroadcastService: MsalBroadcastService,\n    private _profileService: ProfileService,\n    private _router : Router\n  )\n  { \n\n    //check and set logged in status\n    this._msalBroadcastService.inProgress$\n    .pipe(\n      filter((status: InteractionStatus) => status === InteractionStatus.None),\n    )\n    .subscribe((x) => {\n\n      this.checkAndSetActiveAccount();\n    \n      if(!this.canLogin && !this.isLoggedIn())\n      {\n          this.canLogin = true;\n          this.canLogInSubject$.next(true);\n      }\n    });\n    \n    //get profile when logged in\n    this.loggedIn$.subscribe(status=>\n      {\n         if(status)\n         {\n            if(this.profile)\n            {\n                this.profileSubject$.next(this.profile);\n\n            } else {\n\n            this._profileService.getLoggedInProfile().subscribe(profile=>{\n                this.profile = profile;\n\n                this.profileSubject$.next(profile);\n \n            });\n         }\n        }\n      });\n  }\n\n\n  //only required for internal use\n  private checkAndSetActiveAccount(){\n\n    let activeAccount = this._msalService.instance.getActiveAccount();\n\n    if (!activeAccount && this._msalService.instance.getAllAccounts().length > 0) {\n\n      this._msalService.instance.setActiveAccount(\n            this._msalService.instance.getAllAccounts()[0]\n        );\n      \n      this.loggedInSubject$.next(true);\n    }\n    \n    return activeAccount;\n  }\n\n  loggedInAccount(): AccountInfo\n  {\n      return this.checkAndSetActiveAccount();\n  }\n\n  //only required for internal use.\n  //use the observable instance for public accesss\n  private isLoggedIn(): boolean\n  {\n      return this.checkAndSetActiveAccount() !== null;\n  }\n\n  login()\n  {\n    if(this.canLogin)\n    {\n      this.canLogin = false;\n      this._msalService.loginRedirect();\n    }\n  }\n\n  logout() {\n\n    this.canLogin = false;\n    this._msalService.logout();\n  }\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container\">\n  <a class=\"navbar-brand\" href=\"#\">Azure Storage</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/\">Home</a>\n      </li>\n      <li class=\"nav-item active\" *ngIf=\"isLoggedIn()\">\n        <a class=\"nav-link\" (click)=\"login()\")>Login</a>\n      </li>\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"profile\">Profile</a>\n      </li>\n      <li class=\"nav-item active\" *ngIf=\"isLoggedIn()\">\n        <a class=\"nav-link\" (click)=\"logout()\")>Logout</a>\n      </li>\n    </ul>\n  </div>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet *ngIf=\"!isIframe\"></router-outlet>\n</div>\n\n","import { Component} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Subscription } from 'rxjs';\nimport { MsalService } from '@azure/msal-angular';\nimport { AuthService } from './shared/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  isIframe = false;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n        private _msalService: MsalService,\n        private _authService: AuthService\n  ) { }\n \n\n  ngOnInit() {\n    \n    this.isIframe = window !== window.parent && !window.opener;\n    \n    document.documentElement.style.fontSize = 13 + 'px';\n\n      this._msalService.instance.handleRedirectPromise().then(x=>{\n        if(x !== null && x.account !== null)\n        {\n            this._msalService.instance.setActiveAccount(x.account);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(function (sub) {\n      sub.unsubscribe();\n    });\n  }\n\n  login()\n  {\n      this._authService.login();\n  }\n\n  logout(){\n      this._authService.logout();\n  }\n\n  isLoggedIn(){\n\n    this._authService.loggedIn$.subscribe(x=>\n      {\n          return !x;\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../shared/auth.service';\nimport { IUser } from '../shared/model-contracts';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  profile: any;\n\n  constructor( \n    private _authService: AuthService\n    ) {  }\n\n  ngOnInit(): void {\n    this._authService.profile$.subscribe(x=>{\n      this.profile = x;\n\n    });\n  \n  }\n\n}\n","<div>\n    {{profile.fullName}}\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {environment} from '../environments/environment';\nimport { BrowserCacheLocation, InteractionType, IPublicClientApplication, LogLevel, PublicClientApplication } from '@azure/msal-browser';\nimport { MsalBroadcastService, MsalInterceptor, MsalInterceptorConfiguration, MsalService, MSAL_INSTANCE, MSAL_INTERCEPTOR_CONFIG } from '@azure/msal-angular';\n\nconst isIE = window.navigator.userAgent.indexOf(\"MSIE \") > -1 || window.navigator.userAgent.indexOf(\"Trident/\") > -1;\n\nexport function loggerCallback(logLevel: LogLevel, message: string) {\n//  console.log(message);\n}\n\nexport function MSALInstanceFactory(): IPublicClientApplication {\n  return new PublicClientApplication({\n    auth: {\n      clientId: environment.b2cConfig.clientId,\n      authority: environment.b2cConfig.authorities.signUpSignIn.authority,\n      redirectUri: environment.b2cConfig.redirectUrl,\n      postLogoutRedirectUri: '/',\n      knownAuthorities: [environment.b2cConfig.authorityDomain]\n    },\n    cache: {\n      cacheLocation: BrowserCacheLocation.LocalStorage,\n      storeAuthStateInCookie: isIE, // set to true for IE 11\n    },\n    system: {\n      loggerOptions: {\n        loggerCallback,\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false\n      }\n    }\n  });\n}\n\nexport function MSALInterceptorConfigFactory(): MsalInterceptorConfiguration {\n  const protectedResourceMap = new Map<string, Array<string>>();\n  protectedResourceMap.set(environment.b2cConfig.resources.uri, environment.b2cConfig.resources.scopes);\n\n  return {\n    interactionType: InteractionType.Redirect,\n    protectedResourceMap,\n  };\n}\n\n@NgModule({\n\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MsalInterceptor,\n      multi: true\n    },{\n      provide: MSAL_INSTANCE,\n      useFactory: MSALInstanceFactory\n    },{\n      provide: MSAL_INTERCEPTOR_CONFIG,\n      useFactory: MSALInterceptorConfigFactory\n    },\n    MsalService,\n    MsalBroadcastService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  { path: 'profile', component: ProfileComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}